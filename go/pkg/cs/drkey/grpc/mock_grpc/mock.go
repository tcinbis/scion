// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/scionproto/scion/go/pkg/cs/drkey/grpc (interfaces: Lvl1KeyGetter)

// Package mock_grpc is a generated GoMock package.
package mock_grpc

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	addr "github.com/scionproto/scion/go/lib/addr"
	drkey "github.com/scionproto/scion/go/pkg/proto/drkey"
)

// MockLvl1KeyGetter is a mock of Lvl1KeyGetter interface.
type MockLvl1KeyGetter struct {
	ctrl     *gomock.Controller
	recorder *MockLvl1KeyGetterMockRecorder
}

// MockLvl1KeyGetterMockRecorder is the mock recorder for MockLvl1KeyGetter.
type MockLvl1KeyGetterMockRecorder struct {
	mock *MockLvl1KeyGetter
}

// NewMockLvl1KeyGetter creates a new mock instance.
func NewMockLvl1KeyGetter(ctrl *gomock.Controller) *MockLvl1KeyGetter {
	mock := &MockLvl1KeyGetter{ctrl: ctrl}
	mock.recorder = &MockLvl1KeyGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLvl1KeyGetter) EXPECT() *MockLvl1KeyGetterMockRecorder {
	return m.recorder
}

// GetLvl1Key mocks base method.
func (m *MockLvl1KeyGetter) GetLvl1Key(arg0 context.Context, arg1 addr.IA, arg2 *drkey.DRKeyLvl1Request) (*drkey.DRKeyLvl1Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLvl1Key", arg0, arg1, arg2)
	ret0, _ := ret[0].(*drkey.DRKeyLvl1Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLvl1Key indicates an expected call of GetLvl1Key.
func (mr *MockLvl1KeyGetterMockRecorder) GetLvl1Key(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLvl1Key", reflect.TypeOf((*MockLvl1KeyGetter)(nil).GetLvl1Key), arg0, arg1, arg2)
}
